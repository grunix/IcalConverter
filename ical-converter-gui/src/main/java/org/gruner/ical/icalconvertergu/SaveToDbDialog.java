/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SaveToDbDialog.java
 *
 * Created on 13.03.2012, 22:07:59
 */
package org.gruner.ical.icalconvertergu;

import java.awt.Toolkit;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import javax.swing.DefaultBoundedRangeModel;
import javax.swing.JProgressBar;
import javax.swing.SwingWorker;
import org.gruner.ical.icalconvertergu.model.EventItemModelController;
import org.gruner.ical.icalconvertergu.model.SaveProcess;

/**
 *
 * @author ladmin
 */
public class SaveToDbDialog extends javax.swing.JDialog implements PropertyChangeListener {

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
    if ("progress".equals(evt.getPropertyName()) ){
      int progress = (Integer) evt.getNewValue();
      this.jPbDbSave.setIndeterminate(false);
      this.jPbDbSave.setValue(progress);
      //taskOutput.append(String.format("Completed %d%% of task.\n", progress));
    }
    }

    /** Creates new form SaveToDbDialog */
    public SaveToDbDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPbDbSave = new javax.swing.JProgressBar();
        btEnd = new javax.swing.JButton();
        btStart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setName("jPanel1"); // NOI18N

        jPbDbSave.setIndeterminate(true);
        jPbDbSave.setName("jPbDbSave"); // NOI18N
        jPbDbSave.setStringPainted(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPbDbSave, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPbDbSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btEnd.setText("Beenden");
        btEnd.setEnabled(false);
        btEnd.setName("btEnd"); // NOI18N
        btEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEndActionPerformed(evt);
            }
        });

        btStart.setText("Starten");
        btStart.setName("btStart"); // NOI18N
        btStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btStartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btStart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 270, Short.MAX_VALUE)
                        .addComponent(btEnd)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btEnd)
                    .addComponent(btStart))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEndActionPerformed
        //this.setVisible(false);
        System.out.println(evt.getActionCommand());
        //task.cancel(true);
        
        this.setVisible(false);
    }//GEN-LAST:event_btEndActionPerformed

    private void btStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btStartActionPerformed
        //eic.saveEvents();
        try {

            btStart.setEnabled(false);
            btEnd.setEnabled(true);
            task = new Task();
            task.addPropertyChangeListener(this);
            task.execute();
            
            // ThreadPoolExecutor ex = new ThreadPoolExecutor
            //eic.saveEvents();
        } catch (Exception e) {
        }
        //dialog.setVisible(false);
    }//GEN-LAST:event_btStartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaveToDbDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaveToDbDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaveToDbDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaveToDbDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                SaveToDbDialog dialog = new SaveToDbDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    private int persentComplete = 0;

    public int getPersentComplete() {
        return persentComplete;
    }

    public void setPerseSntComplete(int persentComplete) {
        this.persentComplete = persentComplete;
    }
    private EventItemModelController eic = EventItemModelController.getInstance();

    public EventItemModelController getEic() {
        return eic;
    }

    public void setEic(EventItemModelController eic) {
        this.eic = eic;
    }
    private Task task;

    class Task extends SwingWorker<Void, Void> {
        /*
         * Main task. Executed in background thread.
         */

        private int progress = 0;
        
        @Override
        public Void doInBackground() {
            Random random = new Random();
            int progress = 0;
            // Initialize progress property.
            setProgress(0);

            //Thread.currentThread().sleep(3000);
            SaveProcess saveProcess = new SaveProcess();
            saveProcess.setPerscentage(persentComplete);
            saveProcess.setController(EventItemModelController.getInstance());
            ExecutorService service = Executors.newSingleThreadExecutor();
            Future f = service.submit(saveProcess);

            service.shutdown();

            while (!f.isDone()) {
                try {
                    Thread.sleep(random.nextInt(1000));
                    progress+=10;//s = saveProcess.getPerscentage();
                } catch (InterruptedException ignore) {
                }
            }
            //btEnd.setEnabled(false);
            //btEnd.setEnabled(true);
            btStart.setVisible(false);
            //btEnd.setVisible(false);
            //btEnd.setEnabled(true);
            //btEnd.show(true);
            return null;
        }

        /*
         * Executed in event dispatch thread
         */
        public void done() {
            Toolkit.getDefaultToolkit().beep();
            //btStart.setEnabled(true);
            //btEnd.setEnabled(false);
            //taskOutput.append("Done!\n");
        }
    }
    private boolean done;

    public void isDone(boolean done) {
        jPbDbSave.setValue(100);
        btEnd.setEnabled(true);
    }

    public void update() {
        //jPbDbSave
        JProgressBar jpb = new JProgressBar(WIDTH, WIDTH);
//  
        //jpb.setM
        DefaultBoundedRangeModel brm = new DefaultBoundedRangeModel();
        this.jPbDbSave.setModel(brm);
        brm.setValue(this.getPersentComplete());
        //brm

//                        JDialog j = null;
//                        j.
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEnd;
    private javax.swing.JButton btStart;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jPbDbSave;
    // End of variables declaration//GEN-END:variables
}
